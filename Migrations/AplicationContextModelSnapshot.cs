// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReviewApp.Data;

namespace ReviewApp.Migrations
{
    [DbContext(typeof(AplicationContext))]
    partial class AplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ReviewApp.Models.A_AC", b =>
                {
                    b.Property<string>("article_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("articleCategory_id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("article_id", "articleCategory_id");

                    b.ToTable("A_ACs");
                });

            modelBuilder.Entity("ReviewApp.Models.Article", b =>
                {
                    b.Property<string>("article_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("article_id");

                    b.HasIndex("user_id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("ReviewApp.Models.ArticleCategory", b =>
                {
                    b.Property<string>("articleCategory_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("articleCategory_id");

                    b.ToTable("ArticleCategories");
                });

            modelBuilder.Entity("ReviewApp.Models.Comment", b =>
                {
                    b.Property<string>("article_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("user_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("article_id", "user_id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ReviewApp.Models.Preference", b =>
                {
                    b.Property<string>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("darkmode")
                        .HasColumnType("bit");

                    b.Property<bool>("gdpr_acceptance")
                        .HasColumnType("bit");

                    b.HasKey("user_id");

                    b.ToTable("Preferences");
                });

            modelBuilder.Entity("ReviewApp.Models.Profile", b =>
                {
                    b.Property<string>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("age")
                        .HasColumnType("int");

                    b.Property<string>("displayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("ReviewApp.Models.User", b =>
                {
                    b.Property<string>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userCategery_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("user_id");

                    b.HasIndex("userCategery_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ReviewApp.Models.UserCategory", b =>
                {
                    b.Property<string>("userCategory_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("aditionalInfo_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userCategory_id");

                    b.ToTable("UserCategories");

                    b.HasData(
                        new
                        {
                            userCategory_id = "1",
                            aditionalInfo_id = "ceva",
                            role = "Administrator"
                        },
                        new
                        {
                            userCategory_id = "2",
                            aditionalInfo_id = "ceva",
                            role = "Creator"
                        },
                        new
                        {
                            userCategory_id = "3",
                            aditionalInfo_id = "ceva",
                            role = "Consumer"
                        });
                });

            modelBuilder.Entity("ReviewApp.Models.Article", b =>
                {
                    b.HasOne("ReviewApp.Models.User", "user")
                        .WithMany("Articles")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("ReviewApp.Models.Preference", b =>
                {
                    b.HasOne("ReviewApp.Models.User", "user")
                        .WithOne("preference")
                        .HasForeignKey("ReviewApp.Models.Preference", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("ReviewApp.Models.Profile", b =>
                {
                    b.HasOne("ReviewApp.Models.User", "user")
                        .WithOne("profile")
                        .HasForeignKey("ReviewApp.Models.Profile", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("ReviewApp.Models.User", b =>
                {
                    b.HasOne("ReviewApp.Models.UserCategory", "userCategory")
                        .WithMany("Users")
                        .HasForeignKey("userCategery_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("userCategory");
                });

            modelBuilder.Entity("ReviewApp.Models.User", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("preference");

                    b.Navigation("profile");
                });

            modelBuilder.Entity("ReviewApp.Models.UserCategory", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
